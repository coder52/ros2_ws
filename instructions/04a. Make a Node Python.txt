MAKE A NODE SCRIPT
$ cd ros2_ws/src/my_py_pkg
$ cd my_py_pkg
$ touch my_first_node.py
$ cd ~/ros2_ws/src
$ code .

WRITE THE CODE    ACHTUNG! WHERE WE DEFINE node name and executable name

#!/usr/bin/env python3
import rclpy
from rclpy.node import Node

def main(args=None):
    rclpy.init(args=args)
    node = Node("py_test")  # NODE NAME selected as py_test
    node.get_logger().info("Hello world!")
    rclpy.spin(node)  # This command repeats node's job before CTRL+C
    rclpy.shutdown()

if __name__ == "__main__":
    main()


RUN CODE DIRRECT FROM COMMAND LINE
$ cd ~/ros2_ws/src/my_py_pkg/my_py_pkg
MAKE CODE EXECUTABLE
$ chmod +x my_first_node.py
RUN THE CODE DIRECT
$ ./my_first_node.py
[INFO] [1740427277.625129799] [py_test]: Hello world!

RUN THE CODE FROM ROS@
$ cd ~/ros2_ws/src
$ cd ~/ros2_ws/src

CHANGE THIS PART IN setup.py LIKE THAT 
SELECT EXECUTABLE NAME AS py_node
entry_points={
        'console_scripts': [
            "py_node = my_py_pkg.my_first_node:main"   <============ THIS LINE
        ],
    },

BUILD THE PACKAGE
$ cd ~/ros2_ws
$ colcon build --packages-select my_py_pkg

SOURCE YOUR PACKAGE
# IF YOU ALREADY SAVE IN .bashrc
source ~/.bashrc
# IF YOU DIDN'T SAVE IN .bashrc
source ~/ros2_ws/install/setup.bash

RUN THE PACKAGE
$ cd ~/ros2_ws
$ ros2 run my_py_pkg py_node   <---- USE EXECUTABLE NAME HERE



NOTE!
DONT FORGET 
# start ros2 jazzy
source /opt/ros/jazzy/setup.bash
# start workspace
source ~/ros2_ws/install/setup.bash












